apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'idea'
apply from: "$rootProject.projectDir/keys.gradle"

configurations {
    create("compile")
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


def apiKey = ext.apiKey
buildConfig {
    clsName = 'BuildConfig'
    packageName = 'com.segunfamisa.zeitung.data'

    buildConfigField 'String', 'BaseUrl', "https://newsapi.org/v2/"
    buildConfigField 'String', 'ApiKey', "${apiKey.apiKey()}"
}

dependencies {
    def libs = rootProject.ext.libraryVersions
    def testLibs = rootProject.ext.testLibraryVersions

    implementation project(':shared:core')
    implementation project(':shared:domain')
    implementation project(':shared:data')

    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$libs.coroutinesVersion")

    implementation( "com.google.dagger:dagger:$libs.daggerVersion")
    kapt("com.google.dagger:dagger-compiler:$libs.daggerVersion")

    implementation("io.arrow-kt:arrow-core:$libs.arrowVersion")
    implementation("com.squareup.retrofit2:retrofit:$libs.retoriftVersion")
    implementation("com.squareup.retrofit2:converter-moshi:$libs.moshiVersion")

    testImplementation("junit:junit:$testLibs.jUnitVersion")
    testImplementation("com.squareup.okhttp3:mockwebserver:$testLibs.mockWebServerVersion") {
        because "version 3.12.0 uses okhttp version 3.12.0 which is incompatible with retrofit 2.4.0"
    }
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:$testLibs.mockitoKotlinVersion")
}