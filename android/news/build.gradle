plugins {
    id 'com.android.library'
    id 'kotlin-android'
}
apply from: "${rootProject.projectDir}/config/android-library-compose-config.gradle"

dependencies {
    def libs = rootProject.ext.libraryVersions
    def testLibs = rootProject.ext.testLibraryVersions

    implementation project(':android:common')
    implementation project(':shared:domain')
    implementation project(':shared:core')
    implementation project(':shared:utils')

    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")

    implementation("androidx.compose.foundation:foundation-layout:$libs.composeVersion")
    implementation("androidx.compose.material:material:$libs.composeVersion")
    implementation("androidx.compose.animation:animation:$libs.composeVersion")
    implementation("androidx.compose.ui:ui:$libs.composeVersion")
    implementation("androidx.constraintlayout:constraintlayout-compose:$libs.composeConstraintLayoutVersion")
    implementation("androidx.compose.runtime:runtime-livedata:$libs.composeVersion")
    implementation("androidx.compose.ui:ui-tooling:$libs.composeUiToolingVersion")

    implementation "io.arrow-kt:arrow-core:$libs.arrowVersion"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$libs.vmKtxVersion")
    implementation("io.coil-kt:coil-compose:$libs.coilVersion")

    implementation("com.google.dagger:dagger:$libs.daggerVersion")

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$libs.coroutinesVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$libs.coroutinesVersion")

    testImplementation "junit:junit:$testLibs.jUnitVersion"
    androidTestImplementation "androidx.test.ext:junit:$testLibs.androidXJunitExtVersion"
}